{"version":3,"file":"static/js/877.a612b432.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/helped/getNotificatin.js","redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n    color: #181717;\n    text-align: center;\n    text-shadow: 2px 2px 5px white;\n    font-size: 30px;\n`;","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport function Section({ title, children }) {\n    return (\n        <section>\n            <Title>{title}</Title>\n            {children}\n        </section>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};","import Notiflix from \"notiflix\";\n\nexport const getNotification = message => {\n    Notiflix.Report.warning('Warning', message);\n};\n\nNotiflix.Report.init({\n    svgSize: '50px',\n    messageFontSize: '20px',\n    warning: {\n      svgColor: '#44728f',\n  \n      buttonBackground: '#44728f',\n      backOverlayColor: 'rgba(0,0, 0,0.2)',\n    },\n});","export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  border: 1px solid gray;\n  border-radius: 10px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 1px 1px 5px gray;\n  background: linear-gradient(180deg, #b5b5b5, #599caa, #0f596b);\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 28px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  gap: 5px;\n`;\n\nexport const FormInput = styled.input`\n  max-width: 300px;\n  width: 100%;\n  height: 30px;\n  border-radius: 8px;\n  font-size: 20px;\n  padding: 10px;\n`;\n\nexport const FormButton = styled.button`\n  margin: 0 auto;\n  border-radius: 8px;\n  padding: 5px 10px;\n  background: transparent;\n  color: white;\n  box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-shadow: 5px 5px 10px black;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #145d6f;\n  }\n`;\n\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { Form, FormLabel, FormInput, FormButton } from './ContactForm.styled';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport { getNotification } from 'components/helped/getNotificatin';\n\n\nexport function ContactForm() {\n  const { contactsItem } = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const { name, number } = form.elements;\n\n    const newContact = {\n      id: nanoid(),\n      name: name.value,\n      number: number.value,\n    };\n    if (contactsItem.some(contact => contact.name.toLowerCase() === name.value.toLowerCase())) {\n      getNotification(`${name.value} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я\\s]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?[0-9\\s\\-\\(\\)]+\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n}\n\n\n\n\n\n\n\n\n","import styled from '@emotion/styled';\nimport { BiSolidTrash } from 'react-icons/bi';\n\nexport const ContactListStyled = styled.ul`\n    padding-left: 0;\n    max-width: 450px;\n    margin: 0 auto;\n\n    @media screen and (min-width: 1048px) {\n        width: 450px;\n    }\n`;\n\nexport const ContactItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 26px;\n    border: 1px solid gray;\n    border-radius: 10px;\n    box-shadow: 1px 1px 5px gray;\n    padding: 10px 20px;\n    margin-bottom: 10px;\n    background: linear-gradient(180deg, #b5b5b5, #599caa, #0f596b);\n`;\n\nexport const ContactData = styled.p`\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`;\n\nexport const ButtonDelete = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    border-radius: 8px;\n    height: 35px;\n    padding: 0 5px;\n    background: transparent;\n    color: white;\n    box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n    text-shadow: 5px 5px 10px black;\n    font-size: 18px;\n\n    :hover,\n    :focus {\n        cursor: pointer;\n        background: #2a7182;\n    }\n`;\n\nexport const Span = styled.span`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n`;\n\nexport const DeleteSpan = styled.span`\n    @media screen and (max-width: 768px) {\n        display: none;\n    }\n`;\n\nexport const ButtonIcon = styled(BiSolidTrash)`\n    fill: currentColor;\n`;\n\nexport const Text = styled.li`\n    display: block;\n    font-size: 28px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { BiSolidFace, BiSolidPhone } from 'react-icons/bi';\n\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { \n  ContactListStyled,\n  ContactItem,\n  ContactData,\n  ButtonDelete,\n  Span,\n  ButtonIcon,\n  Text,\n  DeleteSpan, } from './ContactList.styled';\n\n\n  export function ContactList() {\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n    const { contactsItem, isLoading, error } = useSelector(getContacts);\n\n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const getFilterContact = () => {\n      const normalizedFilter = filter.toLowerCase().trim();\n      return contactsItem.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    };\n\n    const visibleContacts = getFilterContact();\n\n    return (\n      <ContactListStyled>\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n        {contactsItem.length > 0 ? (\n        visibleContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactData>\n              <Span>\n                <BiSolidFace />\n                {name}:{' '}\n              </Span>\n              <Span>\n                <BiSolidPhone />\n                {number}\n              </Span>\n            </ContactData>\n            <ButtonDelete\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              <ButtonIcon /> <DeleteSpan>Delete</DeleteSpan>\n            </ButtonDelete>\n          </ContactItem>\n        ))\n      ) : (\n        <Text>Oops, contact list is empty. Add new contact</Text>\n      )}\n    </ContactListStyled>\n  );\n}\n\n\n\n\n","import styled from '@emotion/styled';\n\n\nexport const Container = styled.div`\n    margin-bottom: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    font-size: 26px;\n    align-items: center;\n`;\n\nexport const FilterInput = styled.input`\n    max-width: 300px;\n    width: 100%;\n    height: 30px;\n    font-size: 24px;\n    border-radius: 8px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport { Container, FilterLabel, FilterInput } from './Filter.styled';\n\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Container>\n      <FilterLabel>\n        Find contact by name\n        <FilterInput type='text' onChange={onChangeFilter} value={filter} />\n      </FilterLabel>\n    </Container>\n  );\n}","import { useSelector } from \"react-redux\";\nimport { getContacts } from 'redux/selectors';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Section } from \"components/Section/Section\";\n\nconst Contacts = () => {\n    const { isLoading, error } = useSelector(getContacts);\n    return (\n      <>\n        <Section title={'Add new contact'}>\n          <ContactForm />\n        </Section>\n        {isLoading && !error && <b>Request in progress...</b>}\n        <Section title={'My contacts'}>\n          <Filter />\n          <ContactList />\n        </Section>\n      </>\n    );\n};\n  \nexport default Contacts;"],"names":["Title","styled","Section","title","children","getNotification","message","Notiflix","svgSize","messageFontSize","warning","svgColor","buttonBackground","backOverlayColor","getContacts","state","contacts","getFilter","filter","Form","FormLabel","FormInput","FormButton","ContactForm","contactsItem","useSelector","dispatch","useDispatch","onSubmit","evt","preventDefault","form","target","elements","name","number","newContact","id","nanoid","value","some","contact","toLowerCase","addContact","reset","type","pattern","required","ContactListStyled","ContactItem","ContactData","ButtonDelete","Span","DeleteSpan","ButtonIcon","BiSolidTrash","Text","ContactList","isLoading","error","useEffect","fetchContacts","visibleContacts","normalizedFilter","trim","includes","getFilterContact","length","map","onClick","deleteContact","Container","FilterLabel","FilterInput","Filter","onChange","event","setFilter"],"sourceRoot":""}